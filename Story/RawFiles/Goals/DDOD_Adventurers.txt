Version 1
SubGoalCombiner SGC_AND
INITSECTION
//REGION //adventurers templates
//DB_adventurerTemplates((GUID)_characterTemplate,(GUID)_characterGlobal);
DB_adventurerTemplates("b3b4a6dd-e8f3-424a-a381-848b85de3d9d",CHARACTERGUID_S_Player_Alex_358e2f21-5148-4d6c-b5c6-b162a2726dd1);
DB_adventurerTemplates("c5abadf2-7500-463c-90ce-9ded852a6360",CHARACTERGUID_S_Player_Andry_31705d73-8280-40ef-a4c5-914f2680c3ac);
DB_adventurerTemplates("8216f121-bea9-47e7-a51d-9120a79f962d",CHARACTERGUID_S_Player_Duck_8b4fa1dd-e518-4947-9a0b-e94207f9cf64);
DB_adventurerTemplates("540d9569-31e3-499c-8d78-5249d653fbf3",CHARACTERGUID_S_Player_Frederick_1434386d-a57b-4107-a8d4-27d934d49e49);

DB_adventurerTemplatesByTagCounter("FEMALE",1);
DB_adventurerTemplatesByTagCounter("MALE",3);
//END_REGION

//REGION //names by tag
DB_tagCounter(2);
//DB_adventurerNames(_tag,_name);
DB_adventurerNames("MALE","Alexandr");
DB_adventurerNames("MALE","Ifan");
DB_adventurerNames("MALE","Taurus");
DB_adventurerNames("MALE","Leo");
DB_adventurerNames("MALE","Sage");
DB_adventurerNames("MALE","Nicolas");
DB_adventurerNames("MALE","Grey");
DB_adventurerNames("MALE","Finnigan");
DB_adventurerNames("MALE","August");
DB_adventurerNames("MALE","Branch");
DB_adventurerNames("MALE","Gale");
DB_adventurerNames("MALE","Felix");
DB_adventurerNames("FEMALE","Alexandra");
DB_adventurerNames("FEMALE","Araxie");
DB_adventurerNames("FEMALE","Alyx");
DB_adventurerNames("FEMALE","Arya");
DB_adventurerNames("FEMALE","Azzura");
DB_adventurerNames("FEMALE","Calixte");
DB_adventurerNames("FEMALE","Fae");
DB_adventurerNames("FEMALE","Exodus");
DB_adventurerNames("FEMALE","Gwenith");
DB_adventurerNames("FEMALE","Sansa");
DB_adventurerNames("FEMALE","Siri");
DB_adventurerNames("FEMALE","Zoela");

//DB_adventurerNamesCounter(_tag,_counter)
DB_adventurerNamesCounter("MALE",-1);
PROC_countNamesByTag("MALE");
DB_adventurerNamesCounter("FEMALE",-1);
PROC_countNamesByTag("FEMALE");
//END_REGION

//REGION //adventurers class presets
DB_adventurerPresetsCounter(15);
//DB_adventurerPresets((STRING)_presetStats,(STRING)_presetEquips);
DB_adventurerPresets("Knight","Class_Knight_Start");
DB_adventurerPresets("Cleric","Class_Cleric_Start");
DB_adventurerPresets("Witch","Class_Witch_Start");
DB_adventurerPresets("Fighter","Class_Fighter_Start");
DB_adventurerPresets("Rogue","Class_Rogue_Start");
DB_adventurerPresets("Battlemage","Class_Battlemage_Start");
DB_adventurerPresets("Enchanter","Class_Enchanter_Start");
DB_adventurerPresets("Inquisitor","Class_Inquisitor_Start");
DB_adventurerPresets("Metamorph","Class_Metamorph_Start");
DB_adventurerPresets("Ranger","Class_Ranger_Start");
DB_adventurerPresets("Shadowblade","Class_Shadowblade_Start");
DB_adventurerPresets("Conjurer","Class_Conjurer_Start");
DB_adventurerPresets("Wayfarer","Class_Wayfarer_Start");
DB_adventurerPresets("Wizard","Class_Wizard_Start");
//END_REGION

//REGION //adventurers definition&description
//DB_generatedAdventurers(_idx,_tag,_presetStats,_adventurerGuid)

//DB_generatedAdventurers_HirePrice(_adventurerGuid,_price)

//DB_adventurersToOffTheStage(_adventurerGuid)

//DB_Adventurers_RespecPrice(_char,_goldPrice,_daysPrice)

//DB_Adventurers_TrainPrice(_char,_goldPrice,_daysPrice)

//DB_Adventurers_UnavailabilityDays(_char,_days)


//END_REGION
KBSECTION
IF
StoryEvent(_,"DDOD_softExitDungeon")
THEN
PROC_adventurersOffTheStage();
PROC_clearGeneratedAdventurer();
PROC_generateAdventurersTavern(4,TRIGGERGUID_S_DDOD_DemoHub_AdventurersSpawn_fe09d0d3-1db0-45ae-a9f7-746a396d4e1c);
PROC_rotateAdventurersTo(ITEMGUID_LTS_Campfire_B_001_0762a88e-10d8-4669-a419-b8b287c0d991);

IF
StoryEvent(_,"DDOD_hardExitDungeon")
THEN
PROC_adventurersOffTheStage();
PROC_clearGeneratedAdventurer();
PROC_generateAdventurersTavern(4,TRIGGERGUID_S_DDOD_DemoHub_AdventurersSpawn_fe09d0d3-1db0-45ae-a9f7-746a396d4e1c);
PROC_rotateAdventurersTo(ITEMGUID_LTS_Campfire_B_001_0762a88e-10d8-4669-a419-b8b287c0d991);

IF
GameStarted("HubLocation",0)
THEN
PROC_clearGeneratedAdventurer();
PROC_generateAdventurersTavern(4,TRIGGERGUID_S_DDOD_DemoHub_AdventurersSpawn_fe09d0d3-1db0-45ae-a9f7-746a396d4e1c);
PROC_rotateAdventurersTo(ITEMGUID_LTS_Campfire_B_001_0762a88e-10d8-4669-a419-b8b287c0d991);

//REGION //hire adventurer

IF
ObjectFlagSet("Adventurer_Hire",_char,_id)
AND
ObjectGetFlag(_char,"Adventurer_Reserve",0)
AND
DialogGetInvolvedPlayer(_id,1,_player)
AND
NOT DB_generatedAdventurers(_,_,_,_,(CHARACTERGUID)_char)
AND
QRY_generateConstAdventurer((CHARACTERGUID)_char)
AND
DB_generatedAdventurers(_idx,_presetStats,_tag,_char,_createdConstAdventurer)
THEN
ObjectSetFlag(_createdConstAdventurer,"Adventurer_Hire",-1);
PROC_GLO_PartyMembers_CheckAdd_DDOD((CHARACTERGUID)_createdConstAdventurer,NULL_00000000-0000-0000-0000-000000000000);
NRD_CharacterSetGlobal(_createdConstAdventurer,1);



//Hire advneturer to reserve
IF
ObjectFlagSet("Adventurer_Hire",_char,_id)
AND
ObjectGetFlag(_char,"Adventurer_Reserve",1)
AND
DialogGetInvolvedPlayer(_id,1,_player)
AND
NOT DB_generatedAdventurers(_,_,_,_,(CHARACTERGUID)_char)
AND
QRY_generateConstAdventurer((CHARACTERGUID)_char)
AND
DB_generatedAdventurers(_idx,_presetStats,_tag,_char,_createdConstAdventurer)
THEN
ObjectSetFlag(_createdConstAdventurer,"Adventurer_Hire",-1);
ObjectSetFlag(_createdConstAdventurer,"Adventurer_Reserve",-1);
PROC_PlayersCharacters_ToInactive(_createdConstAdventurer);

//hire adventurer in the first time
IF 
DB_IsPlayer(_char)
AND
DB_generatedAdventurers(_idx,_tag,_presetStats,_temporaryChar,_char)
THEN
NOT DB_generatedAdventurers(_idx,_tag,_presetStats,_temporaryChar,_char);
PROC_updatePlayersCharactersStatus(_char);
SetTag(_char,"BLOCK_RESURRECTION");

//END_REGION

//REGION //respec adventurer
IF
CharacterCreationFinished(_char)
AND
DB_Adventurers_RespecPrice((CHARACTERGUID)_char,_goldPrice,_daysPrice)
THEN
NOT DB_Adventurers_RespecPrice(_char,_goldPrice,_daysPrice);
DB_Adventurers_UnavailabilityDays(_char,_daysPrice);
ObjectSetFlag(_char,"Adventurer_Reserve",-1);
ObjectClearFlag(_char,"Adventurer_Respec",-1);

IF
CharacterLeveledUp(_char)
AND
DB_Adventurers_RespecPrice((CHARACTERGUID)_char,_goldPrice,_daysPrice)
THEN
NOT DB_Illusionist(_char);
NOT DB_Adventurers_RespecPrice(_char,_goldPrice,_daysPrice);
ObjectClearFlag(_char,"Adventurer_Respec",-1);

IF
ObjectFlagSet("Adventurer_RespecIntent",_char,_id)
AND
NOT SysCount("DB_IsPlayer",1,1)
AND
NOT DB_Adventurers_RespecPrice((CHARACTERGUID)_char,_,_)
AND
SysCount("DB_Illusionist",2,0)
AND
QRY_AdventurerCalculateRespecPrice(_char)
AND
DB_Adventurers_RespecPrice((CHARACTERGUID)_char,_goldPrice,_daysPrice)
THEN
ObjectSetFlag(_char,"Adventurer_RespecAllowed",_id);
DialogSetVariableInt("HUB_CaptainArgus","DDOD_Adventurer_RespecPrice_gold_1ebde1ca-0d48-47ef-bb92-d90fb530a2c6",_goldPrice);
DialogSetVariableInt("HUB_CaptainArgus","DDOD_Adventurer_RespecPrice_days_d5926ffe-fda0-4c5b-8289-19aa22cf1384",_daysPrice);
PROC_checkCharacterHaveGold(_id,_char,_goldPrice);

IF
DialogEnded("HUB_CaptainArgus",_id)
AND
DialogGetInvolvedPlayer(_id,1,_char)
AND
ObjectGetFlag(_char,"Adventurer_Respec",0)
AND
DB_Adventurers_RespecPrice((CHARACTERGUID)_char,_goldPrice,_dayPrice)
THEN
NOT DB_Adventurers_RespecPrice(_char,_goldPrice,_dayPrice);

IF
ObjectFlagSet("Player_PayMoney",_char,_id)
AND
DB_Adventurers_RespecPrice((CHARACTERGUID)_char,_goldPrice,_daysPrice)
AND
IntegerSubtract(0,_goldPrice,_negativePrice)
THEN
UserAddGold((CHARACTERGUID)_char,_negativePrice);
ObjectClearFlag(_char,"Player_PayMoney",_id);

IF
ObjectFlagSet("Adventurer_Respec",_char,_id)
AND
DB_Adventurers_RespecPrice((CHARACTERGUID)_char,_goldPrice,_daysPrice)
THEN
DB_Illusionist(_char,ITEMGUID_FUR_Humans_Citz_Mirror_Used_A_001_23bd77e1-e6f7-4dca-b018-2cec0d6f88d4);

QRY
QRY_AdventurerCalculateRespecPrice((CHARACTERGUID)_char)
AND
NRD_CharacterGetStatInt(_char,"Experience",_exp)
AND
CharacterGetLevel(_char,_lvl)
AND
IntegerDivide(_exp,40,_value1)
AND
IntegerDivide(_value1,_lvl,_goldPrice)
AND
IntegerDivide(_lvl,5,_value2)
AND
IntegerSum(_value2,1,_daysPrice)
THEN
DB_Adventurers_RespecPrice(_char,_goldPrice,_daysPrice);

//END_REGION

//REGION //train adventurer

IF
ObjectFlagSet("Adventurer_TrainIntent",_char,_id)
AND
NOT SysCount("DB_IsPlayer",1,1)
AND
NOT DB_Adventurers_TrainPrice((CHARACTERGUID)_char,_,_)
AND
NOT DB_Adventurers_RespecPrice((CHARACTERGUID)_char,_,_)
AND
CharacterGetLevel(_char,_level)
AND
DB_playersMaxLevel(_maxChar,_maxLevel)
AND
_level<_maxLevel
AND
QRY_AdventurerCalculateTrainPrice(_char)
AND
DB_Adventurers_TrainPrice((CHARACTERGUID)_char,_goldPrice,_daysPrice)
THEN
ObjectSetFlag(_char,"Adventurer_TrainAllowed",_id);
DialogSetVariableInt("HUB_CaptainArgus","DDOD_Adventurer_TrainPrice_gold_f5eb2dd3-19c7-4f01-be03-da21192ee2f5",_goldPrice);
DialogSetVariableInt("HUB_CaptainArgus","DDOD_Adventurer_TrainPrice_days_5151191a-8a7b-44ff-836f-43ec419c979b",_daysPrice);
PROC_checkCharacterHaveGold(_id,_char,_goldPrice);

IF
DialogEnded("HUB_CaptainArgus",_id)
AND
DialogGetInvolvedPlayer(_id,1,_char)
AND
ObjectGetFlag(_char,"Adventurer_Train",0)
AND
DB_Adventurers_TrainPrice((CHARACTERGUID)_char,_goldPrice,_dayPrice)
THEN
NOT DB_Adventurers_TrainPrice(_char,_goldPrice,_dayPrice);

IF
ObjectFlagSet("Player_PayMoney",_char,_id)
AND
DB_Adventurers_TrainPrice((CHARACTERGUID)_char,_goldPrice,_daysPrice)
AND
IntegerSubtract(0,_goldPrice,_negativePrice)
THEN
UserAddGold((CHARACTERGUID)_char,_negativePrice);
ObjectClearFlag(_char,"Player_PayMoney",_id);

IF
ObjectFlagSet("Adventurer_Train",_char,_id)
AND
DB_Adventurers_TrainPrice((CHARACTERGUID)_char,_goldPrice,_daysPrice)
THEN
DialogRequestStop(_char);
DB_Adventurers_UnavailabilityDays(_char,_daysPrice);
ObjectClearFlag(_char,"Adventurer_TrainAllowed",-1);
ObjectSetFlag(_char,"Adventurer_Reserve",-1);

IF
ObjectFlagCleared("Adventurer_Reserve",_char,_id)
AND
ObjectGetFlag(_char,"Adventurer_Train",1)
THEN
ObjectClearFlag(_char,"Adventurer_Train",-1);
CharacterLevelUp((CHARACTERGUID)_char);

QRY
QRY_AdventurerCalculateTrainPrice((CHARACTERGUID)_char)
AND
NRD_CharacterGetStatInt(_char,"Experience",_exp)
AND
CharacterGetLevel(_char,_lvl)
AND
IntegerDivide(_exp,20,_value1)
AND
IntegerDivide(_value1,_lvl,_goldPrice)
AND
IntegerDivide(_lvl,4,_value2)
AND
IntegerSum(_value2,1,_daysPrice)
THEN
DB_Adventurers_TrainPrice(_char,_goldPrice,_daysPrice);

//END_REGION

//REGION //dismiss adventurer /to reserves
IF
ObjectFlagSet("Adventurer_Dismiss",_adventurer,_id)
THEN
PROC_GLO_PartyMembers_Remove((CHARACTERGUID)_adventurer,1);
PROC_PlayersCharacters_ToSuspend((CHARACTERGUID)_adventurer);
DB_adventurersToOffTheStage(_adventurer);

IF
ObjectFlagSet("Adventurer_Reserve",_adventurer,_id)
AND
ObjectGetFlag(_adventurer,"Adventurer_Hire",1)
THEN
PROC_PlayersCharacters_ToInactive((CHARACTERGUID)_adventurer);
PROC_GLO_PartyMembers_MakeNPC_DDOD((CHARACTERGUID)_adventurer);

IF
ObjectFlagCleared("Adventurer_Reserve",_adventurer,_id)
AND
ObjectGetFlag(_adventurer,"Adventurer_Hire",1)
THEN
PROC_PlayersCharacters_ToActive((CHARACTERGUID)_adventurer);
PROC_GLO_PartyMembers_CheckAdd_DDOD((CHARACTERGUID)_adventurer,(CHARACTERGUID)NULL_00000000-0000-0000-0000-000000000000);
PROC_GLO_PartyMembers_ResetInPartyDialogs(_adventurer);
PROC_GLO_PartyMembers_SetInpartyDialog(_adventurer,"Adventurer");


PROC
PROC_adventurersOffTheStage()
AND
DB_adventurersToOffTheStage(_adventurer)
THEN
SetOnStage(_adventurer,0);
NOT DB_adventurersToOffTheStage(_adventurer);
//END_REGION

//REGION //generate adventurer
PROC
PROC_generateAdventurersTavern((INTEGER)_adventurersAmout,(TRIGGERGUID)_spawnPosition)
AND
QRY_resetCounter()
AND
QRY_randomizeAmoutAdventurers(_adventurersAmout)
AND
DB_generatedAdventurers(_idx)
AND
QRY_randomAdventurerPreset(_idx)
AND
QRY_randomAdventurerTag(_idx)
AND
DB_generatedAdventurers(_idxi,_presetStats,_tag)
AND
DB_adventurerPresets(_presetStats,_presetEquips)
AND
GetRandomPositionInTrigger(_spawnPosition,_x,_y,_z)
THEN
PROC_generateAdventurer(_idxi,_x,_y,_z,_tag,_presetStats,_presetEquips);

PROC
PROC_generateAdventurer((INTEGER)_idx,(REAL)_X,(REAL)_Y,(REAL)_Z,(STRING)_tag,(STRING)_presetStats,(STRING)_presetEquips)
AND
DB_adventurerTemplatesByTagCounter(_tag,_countedTemplates)
AND
Random(_countedTemplates,_templateIdx)
AND
QRY_resetCounter()
AND
DB_adventurerTemplates(_charTemplate,_charGlobal)
AND
IsTagged(_charGlobal,_tag,1)
AND
DB_counter(_counter)
AND
QRY_counter()
AND
_counter==_templateIdx
AND
DB_playersMaxLevel(_,_maxLevel)
AND
IntegerDivide(_maxLevel,3,_levelVariation)
AND
IntegerMin(_levelVariation,0,_corLevelVariation)
AND
TemporaryCharacterCreateAtPosition(_X,_Y,_Z,(STRING)_charTemplate,1,_createdAdventurer)
THEN
SetFaction(_createdAdventurer,"Hero");
CharacterMakePlayer(_createdAdventurer);
CharacterApplyPreset(_createdAdventurer,_presetStats);
CharacterTransformAppearanceToWithEquipmentSet(_createdAdventurer,_createdAdventurer,_presetEquips,0);
PROC_charLevelUpTo(_createdAdventurer,_maxLevel,_corLevelVariation);
PROC_equipLevelUpTo(_createdAdventurer,_maxLevel,_corLevelVariation);
CharacterMakeNPC(_createdAdventurer);
SetFaction(_createdAdventurer,"Generic_Companions");
NOT DB_generatedAdventurers(_idx,_presetStats,_tag);
DB_generatedAdventurers(_idx,_presetStats,_tag,_createdAdventurer);

QRY
QRY_generateConstAdventurer((CHARACTERGUID)_temporaryAdventurer)
THEN
PROC_generateConstAdventurer(_temporaryAdventurer);

PROC
PROC_generateConstAdventurer((CHARACTERGUID)_temporaryAdventurer)
AND
GetPosition(_temporaryAdventurer,_X,_Y,_Z)
AND
GetTemplate(_temporaryAdventurer,_charTemplate)
AND
CharacterGetLevel(_temporaryAdventurer,_advLevel)
AND
DB_generatedAdventurers(_idx,_presetStats,_tag,_temporaryAdventurer)
AND
CharacterCreateAtPosition(_X,_Y,_Z,(STRING)_charTemplate,0,_createdConstAdventurer)
THEN
SetFaction(_createdConstAdventurer,"Hero");
SetTag(_createdConstAdventurer,"AVATAR");
DB_GLO_PartyMembers_DefaultFaction(_createdConstAdventurer,"Hero");
DB_GLO_PartyMembers_OriginalAlignment(_createdConstAdventurer,"Hero");

PROC_CharacterRecruitCharacter_preserveLevel(_createdConstAdventurer,(CHARACTERGUID)NULL_00000000-0000-0000-0000-000000000000);
CharacterLevelUpTo(_createdConstAdventurer,_advLevel);
CharacterApplyPreset(_createdConstAdventurer,_presetStats);

PROC_adventurerAssignRandomName(_tag,_createdConstAdventurer);
CharacterMakeNPC(_createdConstAdventurer);
RemoveTemporaryCharacter(_temporaryAdventurer);
NOT DB_generatedAdventurers(_idx,_presetStats,_tag,_temporaryAdventurer);
DB_generatedAdventurers(_idx,_presetStats,_tag,_temporaryAdventurer,_createdConstAdventurer);

QRY
QRY_randomizeAmoutAdventurers((INTEGER)_maxAmout)
AND
DB_counter(_idx)
AND
QRY_counter()
AND
_idx<_maxAmout
THEN
DB_generatedAdventurers(_idx);
PROC_makeNewAdventurerIdx((INTEGER)_maxAmout);

PROC
PROC_makeNewAdventurerIdx((INTEGER)_maxAmout)
AND
QRY_randomizeAmoutAdventurers(_maxAmout)
THEN
DB_NOOP(0);

QRY
QRY_randomAdventurerPreset((INTEGER)_idx)
AND
DB_generatedAdventurers(_idx)
AND
DB_adventurerPresetsCounter(_presetsAmout)
AND
Random(_presetsAmout,_presetIdx)
AND
QRY_resetCounter()
AND
DB_adventurerPresets(_preset,_)
AND
DB_counter(_counter)
AND
QRY_counter()
AND
_counter==_presetIdx
THEN
NOT DB_generatedAdventurers(_idx);
DB_generatedAdventurers(_idx,_preset);

QRY
QRY_randomAdventurerTag((INTEGER)_idx)
AND
DB_generatedAdventurers(_idx,_preset)
AND
DB_tagCounter(_tagsAmout)
AND
QRY_resetCounter()
AND
Random(_tagsAmout,_tagIdx)
AND
DB_adventurerTemplatesByTagCounter(_tag,_)
AND
DB_counter(_counter)
AND
QRY_counter()
AND
_counter==_tagIdx
THEN
NOT DB_generatedAdventurers(_idx,_preset);
DB_generatedAdventurers(_idx,_preset,_tag);

PROC
PROC_adventurerAssignRandomName((STRING)_tag,(CHARACTERGUID)_character)
AND
DB_adventurerNamesCounter(_tag,_counterNames)
AND
Random(_counterNames,_nameNumber)
AND
QRY_resetCounter()
AND
DB_adventurerNames(_tag,_name)
AND
DB_counter(_counter)
AND
QRY_counter()
AND
_counter==_nameNumber
THEN
CharacterSetCustomName(_character,_name);

PROC
PROC_countNamesByTag((STRING)_tag)
AND
QRY_resetCounter()
AND
DB_adventurerNames(_tag,_name)
AND
QRY_counter()
AND
DB_counter(_counter)
AND
DB_adventurerNamesCounter(_tag,_oldCounter)
THEN
NOT DB_adventurerNamesCounter(_tag,_oldCounter);
DB_adventurerNamesCounter(_tag,_counter);

//END_REGION

//REGION //calculate hire price

QRY
QRY_createAdventurersHirePrice((CHARACTERGUID)_adventurer)
AND
DB_generatedAdventurers_HirePrice(_adventurer,_price)
THEN
NOT DB_generatedAdventurers_HirePrice(_adventurer,_price);
DB_generatedAdventurers_HirePrice(_adventurer,0);

QRY
QRY_createAdventurersHirePrice((CHARACTERGUID)_adventurer)
AND
NOT DB_generatedAdventurers_HirePrice(_adventurer,_)
THEN
DB_generatedAdventurers_HirePrice(_adventurer,0);

IF
ObjectFlagSet("Adventurer_HireIntent",_adventurer,_idx)
AND
DialogGetInvolvedPlayer(_idx,1,_player)
AND
QRY_createAdventurersHirePrice(_adventurer)
AND
QRY_calculateAdventurerHirePrice(_adventurer)
AND
QRY_applyAdventurerHireDiscount(_player,_adventurer)
AND
DB_generatedAdventurers_HirePrice((CHARACTERGUID)_adventurer,_hirePrice)
THEN
DialogSetVariableInt("Adventurer","DDOD_Dungeon_Adventurer_HirePrice_318f05a4-e390-4ba8-bb76-7b6401b33821",_hirePrice);
PROC_checkCharacterHaveGold(_idx,(CHARACTERGUID)_player,_hirePrice);

PROC
PROC_checkCharacterHaveGold((INTEGER)_dialogIdx,(CHARACTERGUID)_char,(INTEGER)_goldAmout)
AND
UserGetGold(_char,_hasGoldAmout)
//CharacterGetGold(_char,_hasGoldAmout)
AND
_hasGoldAmout>=_goldAmout
THEN
ObjectSetFlag(_char,"Player_HasMoney",_dialogIdx);

IF
ObjectFlagSet("Player_PayMoney",_char,_id)
AND
DialogGetInvolvedNPC(_id,1,_adventurer)
AND
DB_generatedAdventurers_HirePrice((CHARACTERGUID)_adventurer,_price)
AND
IntegerSubtract(0,_price,_negativePrice)
THEN
UserAddGold((CHARACTERGUID)_char,_negativePrice);
ObjectClearFlag(_char,"Player_PayMoney",_id);

IF
DialogEnded("Adventurer",_id)
AND
DB_generatedAdventurers_HirePrice(_adventurerGuid,_price)
THEN
NOT DB_generatedAdventurers_HirePrice(_adventurerGuid,_price);

IF
DialogEnded("Adventurer",_id)
AND
DialogGetInvolvedNPC(_id,1,_char)
THEN
ObjectClearFlag(_char,"Adventurer_HireIntent",_id);


IF
DialogEnded("Adventurer",_id)
AND
DialogGetInvolvedPlayer(_id,1,_char)
THEN
ObjectClearFlag(_char,"Player_HasMoney",_id);

QRY
QRY_calculateAdventurerHirePrice((CHARACTERGUID)_createdAdventurer)
THEN
PROC_calculateAdventurerHirePrice(_createdAdventurer);

PROC
PROC_calculateAdventurerHirePrice((CHARACTERGUID)_createdAdventurer)
AND
QRY_countEquipmentValue(_createdAdventurer)
AND
DB_generatedAdventurers_HirePrice(_createdAdventurer,_price)
AND
CharacterGetLevel(_createdAdventurer,_level)
AND
IntegerProduct(_level,100,_levelPrice)
AND
IntegerSum(_price,_levelPrice,_newPrice)
THEN
NOT DB_generatedAdventurers_HirePrice(_createdAdventurer,_price);
DB_generatedAdventurers_HirePrice(_createdAdventurer,_newPrice);

QRY
QRY_countEquipmentValue((CHARACTERGUID)_char)
AND
DB_equipmentItemSlots(_slotName)
AND
DB_generatedAdventurers_HirePrice(_char,_price)
AND
CharacterGetEquippedItem(_char,_slotName,_item)
AND
ItemGetGoldValue((ITEMGUID)_item,_itemPrice)
AND
IntegerSum(_price,_itemPrice,_newPrice)
THEN
NOT DB_generatedAdventurers_HirePrice(_char,_price);
DB_generatedAdventurers_HirePrice(_char,_newPrice);

QRY
QRY_applyAdventurerHireDiscount((CHARACTERGUID)_player,(CHARACTERGUID)_adventurer)
THEN
PROC_applyAdventurerHireDiscount(_player,_adventurer);

PROC
PROC_applyAdventurerHireDiscount((CHARACTERGUID)_player,(CHARACTERGUID)_adventurer)
AND
QRY_applyAdventurerHireRelationDiscount(_player,_adventurer)
AND
QRY_applyAdvneturersHireSafetyPricePenalty(_adventurer)
THEN
DB_NOOP(0);

QRY
QRY_applyAdventurerHireRelationDiscount((CHARACTERGUID)_player,(CHARACTERGUID)_adventurer)
AND
DB_generatedAdventurers_HirePrice(_adventurer,_price)
AND
IntegerDivide(_price,2,_halfedPrice)
AND
Real(_halfedPrice,_halfedPriceReal)
AND
CharacterGetRelationToCharacter(_adventurer,_player,_relation)
AND
Real(_relation,_relationReal)
AND
RealDivide(_relationReal,100.0,_discountPerRelation)
AND
RealProduct(_discountPerRelation,_halfedPriceReal,_relationDiscountAmout)
AND
Integer(_relationDiscountAmout,_relationDiscountAmoutInteger)
AND
IntegerSubtract(_halfedPrice,_relationDiscountAmoutInteger,_relationRelatedPrice)
THEN
NOT DB_generatedAdventurers_HirePrice(_adventurer,_price);
DB_generatedAdventurers_HirePrice(_adventurer,_relationRelatedPrice);

QRY
QRY_applyAdvneturersHireSafetyPricePenalty((CHARACTERGUID)_adventurer)
AND
DB_generatedAdventurers_HirePrice(_adventurer,_price)
AND
Real(_price,_priceReal)
AND
RealDivide(_priceReal,100.0,_pricePercent)
AND
DB_PlayersCharacters_Suspend(_deadChar,_suspendType)
AND
QRY_isNegativeSuspendType(_suspendType)
AND
RealProduct(2.0,_pricePercent,_deltaPriceAmout)
AND
Integer(_deltaPriceAmout,_deltaPriceAmoutInteger)
AND
DB_generatedAdventurers_HirePrice(_adventurer,_oldPrice)
AND
IntegerSum(_oldPrice,_deltaPriceAmoutInteger,_newPrice)
THEN
NOT DB_generatedAdventurers_HirePrice(_adventurer,_oldPrice);
DB_generatedAdventurers_HirePrice(_adventurer,_newPrice);

//END_REGION

PROC
PROC_clearGeneratedAdventurer()
AND
DB_generatedAdventurers(_idx,_tag,_presetStats,_adventurerGuid)
THEN
RemoveTemporaryCharacter(_adventurerGuid);
NOT DB_generatedAdventurers(_idx,_tag,_presetStats,_adventurerGuid);

PROC
PROC_rotateAdventurersTo((GUIDSTRING)_object)
AND
DB_generatedAdventurers(_,_,_,_char)
THEN
CharacterLookAt(_char,_object,0);

IF
ObjectFlagSet("TransferInventory",_char,_id)
AND
DialogGetInvolvedPlayer(_id,1,_player)
THEN
MoveAllItemsTo(_char,_player,0,0,0);


//REGION //unavailability system
IF
DB_Adventurers_UnavailabilityDays(_char,_days)
AND
_days != 0
THEN
ObjectSetFlag(_char,"Adventurer_Unavailable",-1);

IF
DB_Adventurers_UnavailabilityDays(_char,_days)
AND
_days == 0
THEN
ObjectClearFlag(_char,"Adventurer_Unavailable",-1);
NOT DB_Adventurers_UnavailabilityDays(_char,_days);

IF
StoryEvent(_,"DDOD_hardExitDungeon")
AND
DB_Adventurers_UnavailabilityDays(_char,_days)
AND
IntegerSubtract(_days,1,_newDays)
THEN
NOT DB_Adventurers_UnavailabilityDays(_char,_days);
DB_Adventurers_UnavailabilityDays(_char,_newDays);

IF
StoryEvent(_,"DDOD_softExitDungeon")
AND
DB_Adventurers_UnavailabilityDays(_char,_days)
AND
IntegerSubtract(_days,1,_newDays)
THEN
NOT DB_Adventurers_UnavailabilityDays(_char,_days);
DB_Adventurers_UnavailabilityDays(_char,_newDays);


//END_REGION
EXITSECTION

ENDEXITSECTION
ParentTargetEdge "__Start"
